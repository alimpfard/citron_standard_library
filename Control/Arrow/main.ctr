Object on: 'arrow:' do: {:name
  ^Reflect getProperty: name ofObject: me.
}.

Object learn: '~' means: 'arrow:'.

Object on: 'farrow:' do: {:name
  ^$!$({:*args $`(me) message: $`(name) arguments: args.}).
}.
Object learn: 'â‡’' means: 'farrow:'.

# Object on: 'namespaceResolve' do: {
#   var nsr is Object new.
#   var self is me.
#   nsr on: 'respondTo:' do: {:mn ^const self farrow: (mn replace: ';' with: ':'). }.
#   nsr on: 'respondTo:and:' do: {:mn ^const self farrow: (mn replace: ';' with: ':').}.
#   nsr on: 'respondTo:and:and:' do: {:mn ^const self farrow: (mn replace: ';' with: ':'). }.
#   ^nsr.
# }.
#
# Object learn: '->' means: 'namespaceResolve'.
