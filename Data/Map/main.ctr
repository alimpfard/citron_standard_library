Map on: 'keys' do: {
  var r is Array new.
  me each: {:k r push: k. }.
  ^r.
}.
Map on: 'values' do: {
  var r is Array new.
  me each: {:_:v r push: v. }.
  ^r.
}.

Map on: 'clear' do: {
  me each: {:k me deleteAt: k. }.
}.

Map on: 'fromArray:' do: {:arr
  var map is new.
  arr each_v: {:v
    map put: v last at: v head.
  }.
  ^map.
}.

Map on: 'toArray' do: {
  var arr is Array new.
  each: {:k:v arr push: [k, v]. }.
  ^arr.
}.

Map on: 'copy' do: {
  var m is Map new.
  each: {:k:v m put: v at: k.}.
  ^m.
}.

Map on: 'update:' do: {:self:other
  other each: {:k:v self put: v at: k. }.
}.

Map on: 'respondTo:' do: {:self:msg
  ^(msg startsWith: '@') either: { ^self at: (msg skip: 1). } or: { ^self `respondTo: msg. }.
}.
Map on: 'respondTo:and:' do: {:self:msg:val
  ^(msg startsWith: '@') either: { ^self put: val at: (msg from: 1 to: msg length - 1). } or: { ^self `respondTo: msg and: val. }.
}.

CodeBlock on: 'toMap' do: { ^Map cnew: me. }.
