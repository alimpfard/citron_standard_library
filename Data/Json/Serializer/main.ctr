Json on: '_internal_serialize:' do: {:obj
  ^obj toJSON.
}.

Json on: 'serialize:' do: {:obj
  ^obj toJSON.
}.

Nil on: 'toJSON' do: {
  ^'null'.
}.
Number on: 'toJSON' do: {
  ^me toString.
}.
String on: 'toJSON' do: {
  ^'"%s"' % [(me ~ 's/\\\\/\\\\\\\\/g') escapeDoubleQuotes].
}.
Array on: 'toJSON' do: {
  ^'[%:L]' % [',', (me fmap: \:x x toJSON)].
}.
Boolean on: 'toJSON' do: {
  ^either: 'true' or: 'false'.
}.
Map on: 'toJSON' do: {
  ^'{%:L}' % [',', (me kvlist: \:kv [({:key
    key isA: String,
      ifTrue: {^key.}
      ifFalse: { thisBlock error: 'Only a String is allowed as json keys, not some ' + key type. }.
  })[kv head] toJSON, kv last toJSON] join: ':')].
}.
Object on: 'toJSON' do: {
  thisBlock error: 'Cannot serialize object of type ' + me type.
}.
